{"id":"../node_modules/prisma-client-lib/dist/codegen/generators/flow-client.js","dependencies":[{"name":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prisma-client-lib/dist/codegen/generators/flow-client.js.map","includedInParent":true,"mtime":1582757694839},{"name":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/package.json","includedInParent":true,"mtime":1582928465535},{"name":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prisma-client-lib/package.json","includedInParent":true,"mtime":1582757694839},{"name":"./typescript-client","loc":{"line":27,"column":34},"parent":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prisma-client-lib/dist/codegen/generators/flow-client.js","resolved":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prisma-client-lib/dist/codegen/generators/typescript-client.js"},{"name":"../../utils","loc":{"line":28,"column":22},"parent":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prisma-client-lib/dist/codegen/generators/flow-client.js","resolved":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prisma-client-lib/dist/utils/index.js"},{"name":"prettier","loc":{"line":29,"column":23},"parent":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prisma-client-lib/dist/codegen/generators/flow-client.js","resolved":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prettier/index.js"},{"name":"../../utils/codeComment","loc":{"line":30,"column":28},"parent":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prisma-client-lib/dist/codegen/generators/flow-client.js","resolved":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prisma-client-lib/dist/utils/codeComment.js"},{"name":"os","loc":{"line":31,"column":17},"parent":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/prisma-client-lib/dist/codegen/generators/flow-client.js","resolved":"/Users/valentinoespinoza/Handshake/check-in-kiosk-node/node_modules/os-browserify/browser.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar typescript_client_1 = require(\"./typescript-client\");\nvar utils_1 = require(\"../../utils\");\nvar prettier = require(\"prettier\");\nvar codeComment_1 = require(\"../../utils/codeComment\");\nvar os = require(\"os\");\nvar FlowGenerator = /** @class */ (function (_super) {\n    __extends(FlowGenerator, _super);\n    function FlowGenerator() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.genericsDelimiter = ':';\n        _this.lineBreakDelimiter = ',';\n        _this.partialType = '$Shape';\n        _this.exportPrisma = true;\n        _this.prismaInterface = 'PrismaInterface';\n        _this.typeObjectType = 'type';\n        _this.generator = 'flow';\n        return _this;\n    }\n    FlowGenerator.prototype.renderImports = function () {\n        return \"/**\\n * @flow\\n */\\n\\n\" + codeComment_1.codeComment + \"\\n\\nimport type { DocumentNode } from 'graphql'\\nimport type { BasePrismaOptions as BPOType } from 'prisma-client-lib'\\nimport { makePrismaClientClass, Model } from 'prisma-client-lib'\\nimport { typeDefs } from './prisma-schema'\\n\\ntype NodePromise = Promise<Node>\";\n    };\n    FlowGenerator.prototype.renderClientConstructor = function () {\n        return \"export type ClientConstructor<T> = (options?: BPOType) => T\\n\";\n    };\n    FlowGenerator.prototype.format = function (code, options) {\n        if (options === void 0) { options = {}; }\n        return prettier.format(code, __assign({}, options, { parser: 'flow' }));\n    };\n    FlowGenerator.prototype.renderAtLeastOne = function () {\n        // TODO: as soon as flow has a clean solution for at least one, implement it here\n        return \"export type AtLeastOne<T> = $Shape<T>\";\n    };\n    FlowGenerator.prototype.renderGraphQL = function () {\n        return \"$graphql: <T: mixed>(query: string, variables?: {[key: string]: mixed}) => Promise<T>;\";\n    };\n    FlowGenerator.prototype.renderInputListType = function (type) {\n        return type + \"[]\";\n    };\n    FlowGenerator.prototype.renderExists = function () {\n        var queryType = this.schema.getQueryType();\n        if (queryType) {\n            return \"\" + utils_1.getExistsFlowTypes(queryType);\n        }\n        return '';\n    };\n    FlowGenerator.prototype.renderExports = function (options) {\n        var args = this.renderPrismaClassArgs(options);\n        return \"export const Prisma: ClientConstructor<\" + this.prismaInterface + \"> = makePrismaClientClass(\" + args + \")\\n\\nexport const prisma = new Prisma()\";\n    };\n    FlowGenerator.prototype.renderTypedefsFirstLine = function () {\n        return \"// @flow\" + os.EOL;\n    };\n    FlowGenerator.replaceEnv = function (str) {\n        var regex = /\\${env:(.*?)}/;\n        var match = regex.exec(str);\n        // tslint:disable-next-line:prefer-conditional-expression\n        if (match) {\n            return FlowGenerator.replaceEnv(str.slice(0, match.index) + \"${process.env['\" + match[1] + \"'] || \\\"\\\"}\" + str.slice(match[0].length + match.index));\n        }\n        else {\n            return \"`\" + str + \"`\";\n        }\n    };\n    return FlowGenerator;\n}(typescript_client_1.TypescriptGenerator));\nexports.FlowGenerator = FlowGenerator;\n"},"sourceMaps":{"js":{"version":3,"file":"flow-client.js","sourceRoot":"","sources":["../../../src/codegen/generators/flow-client.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yDAAyD;AACzD,qCAAgD;AAEhD,mCAAoC;AACpC,uDAAqD;AAErD,uBAAwB;AAQxB;IAAmC,iCAAmB;IAAtD;QAAA,qEA+EC;QA9EC,uBAAiB,GAAG,GAAG,CAAA;QACvB,wBAAkB,GAAG,GAAG,CAAA;QACxB,iBAAW,GAAG,QAAQ,CAAA;QACtB,kBAAY,GAAG,IAAI,CAAA;QAEnB,qBAAe,GAAG,iBAAiB,CAAA;QAEnC,oBAAc,GAAG,MAAM,CAAA;QACvB,eAAS,GAAkB,MAAM,CAAA;;IAsEnC,CAAC;IApEC,qCAAa,GAAb;QACE,OAAO,2BAKT,yBAAW,6QAOoB,CAAA;IAC/B,CAAC;IACD,+CAAuB,GAAvB;QACE,OAAO,+DACV,CAAA;IACC,CAAC;IACD,8BAAM,GAAN,UAAO,IAAY,EAAE,OAA8B;QAA9B,wBAAA,EAAA,YAA8B;QACjD,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,eACtB,OAAO,IACV,MAAM,EAAE,MAAM,IACd,CAAA;IACJ,CAAC;IACD,wCAAgB,GAAhB;QACE,iFAAiF;QACjF,OAAO,uCAAuC,CAAA;IAChD,CAAC;IACD,qCAAa,GAAb;QACE,OAAO,wFAAwF,CAAA;IACjG,CAAC;IACD,2CAAmB,GAAnB,UAAoB,IAAI;QACtB,OAAU,IAAI,OAAI,CAAA;IACpB,CAAC;IACD,oCAAY,GAAZ;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAA;QAC5C,IAAI,SAAS,EAAE;YACb,OAAO,KAAG,0BAAkB,CAAC,SAAS,CAAG,CAAA;SAC1C;QACD,OAAO,EAAE,CAAA;IACX,CAAC;IACD,qCAAa,GAAb,UAAc,OAAuB;QACnC,IAAM,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAA;QAEhD,OAAO,4CACL,IAAI,CAAC,eAAe,kCACO,IAAI,4CAEF,CAAA;IACjC,CAAC;IACD,+CAAuB,GAAvB;QACE,OAAO,aAAW,EAAE,CAAC,GAAK,CAAA;IAC5B,CAAC;IACM,wBAAU,GAAjB,UAAkB,GAAW;QAC3B,IAAM,KAAK,GAAG,eAAe,CAAA;QAC7B,IAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QAC7B,yDAAyD;QACzD,IAAI,KAAK,EAAE;YACT,OAAO,aAAa,CAAC,UAAU,CAC1B,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,KAAK,CAAC,uBAC1B,KAAK,CAAC,CAAC,CAAC,mBACE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAG,CACvD,CAAA;SACF;aAAM;YACL,OAAO,MAAK,GAAG,MAAI,CAAA;SACpB;IACH,CAAC;IACH,oBAAC;AAAD,CAAC,AA/ED,CAAmC,uCAAmB,GA+ErD;AA/EY,sCAAa","sourcesContent":[null]}},"error":null,"hash":"0364e0449d396a96222e9fbd5032fffc","cacheData":{"env":{}}}